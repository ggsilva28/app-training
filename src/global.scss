/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "~@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "~@ionic/angular/css/normalize.css";
@import "~@ionic/angular/css/structure.css";
@import "~@ionic/angular/css/typography.css";
@import "~@ionic/angular/css/display.css";

/* Optional CSS utils that can be commented out */
@import "~@ionic/angular/css/padding.css";
@import "~@ionic/angular/css/float-elements.css";
@import "~@ionic/angular/css/text-alignment.css";
@import "~@ionic/angular/css/text-transformation.css";
@import "~@ionic/angular/css/flex-utils.css";

* {
  font-family: "Poppins";
}

ion-button {
  --border-radius: 10px;
}

ion-toolbar {
  --padding-top: 30px;
  --padding-bottom: 15px;
  --padding-end: 15px;
  --padding-start: 15px;
}

ion-button {
  --box-shadow: none;
  --padding-start: 25px;
  --padding-end: 25px;
  height: 50px;

  ion-icon {
    margin-left: 15px;
  }
}

.alert-button.primary {
  color: var(--ion-color-primary);
  font-weight: 700;
}

.alert-button.secondary {
  color: var(--ion-color-dark);
  font-weight: 400 !important;
}

.alert-button.danger {
  color: var(--ion-color-danger);
  font-weight: 400 !important;
}

.animate-show {
  animation: forwards show 0.3s;
}

.animate-hide {
  animation: forwards hide 0.3s;
}

.animate-fade-in {
  animation: forwards fadeIn 0.3s;
}

.empty {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 15px;

  ion-img {
    margin: 50px auto 15px;
    width: 240px;
  }
}

.ripple-parent {
  position: relative;
  overflow: hidden;
}

@keyframes hide {
  0% {
    opacity: 1;
    transform: scale(1);
  }

  50% {
    opacity: 1;
    transform: scale(1.05);
  }

  100% {
    opacity: 0;
    transform: scale(0.9);
  }
}

@keyframes show {
  0% {
    opacity: 0;
    transform: scale(0.9);
  }

  50% {
    opacity: 1;
    transform: scale(1.05);
  }

  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
    top: -15px;
  }
  100% {
    opacity: 1;
    top: 0;
  }
}
